package com.savenko.track.presentation.themes.blueTheme

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.darkColorScheme
import androidx.compose.ui.graphics.Color

val blue_dark_color_primary = Color(0xFF9FCAFF)
val blue_dark_color_onPrimary = Color(0xFF003259)
val blue_dark_primaryContainer = Color(0xFF00497D)
val blue_dark_onPrimaryContainer = Color(0xFFD1E4FF)
val blue_dark_secondary = Color(0xFF9ACBFF)
val blue_dark_onSecondary = Color(0xFF003355)
val blue_dark_secondaryContainer = Color(0xFF004A79)
val blue_dark_onSecondaryContainer = Color(0xFFD0E4FF)
val blue_dark_tertiary = Color(0xFFA4C9FF)
val blue_dark_onTertiary = Color(0xFF00315D)
val blue_dark_tertiaryContainer = Color(0xFF004883)
val blue_dark_onTertiaryContainer = Color(0xFFD4E3FF)
val blue_dark_error = Color(0xFFFFB4AB)
val blue_dark_errorContainer = Color(0xFF93000A)
val blue_dark_onError = Color(0xFF690005)
val blue_dark_onErrorContainer = Color(0xFFFFDAD6)
val blue_dark_background = Color(0xFF001F2A)
val blue_dark_onBackground = Color(0xFFBFE9FF)
val blue_dark_surface = Color(0xFF001F2A)
val blue_dark_onSurface = Color(0xFFBFE9FF)
val blue_dark_surfaceVariant = Color(0xFF43474E)
val blue_dark_onSurfaceVariant = Color(0xFFC3C6CF)
val blue_dark_outline = Color(0xFF8D9199)
val blue_dark_inverseOnSurface = Color(0xFF001F2A)
val blue_dark_inverseSurface = Color(0xFFBFE9FF)
val blue_dark_inversePrimary = Color(0xFF0561A4)
val blue_dark_surfaceTint = Color(0xFF9FCAFF)
val blue_dark_outlineVariant = Color(0xFF43474E)
val blue_dark_scrim = Color(0xFF000000)

val blueThemeDarkColorScheme = darkColorScheme(
    primary = blue_dark_color_primary,
    onPrimary = blue_dark_color_onPrimary,
    primaryContainer = blue_dark_primaryContainer,
    onPrimaryContainer = blue_dark_onPrimaryContainer,
    secondary = blue_dark_secondary,
    onSecondary = blue_dark_onSecondary,
    secondaryContainer = blue_dark_secondaryContainer,
    onSecondaryContainer = blue_dark_onSecondaryContainer,
    tertiary = blue_dark_tertiary,
    onTertiary = blue_dark_onTertiary,
    tertiaryContainer = blue_dark_tertiaryContainer,
    onTertiaryContainer = blue_dark_onTertiaryContainer,
    error = blue_dark_error,
    errorContainer = blue_dark_errorContainer,
    onError = blue_dark_onError,
    onErrorContainer = blue_dark_onErrorContainer,
    background = blue_dark_background,
    onBackground = blue_dark_onBackground,
    surface = blue_dark_surface,
    onSurface = blue_dark_onSurface,
    surfaceVariant = blue_dark_surfaceVariant,
    onSurfaceVariant = blue_dark_onSurfaceVariant,
    outline = blue_dark_outline,
    inverseOnSurface = blue_dark_inverseOnSurface,
    inverseSurface = blue_dark_inverseSurface,
    inversePrimary = blue_dark_inversePrimary,
    surfaceTint = blue_dark_surfaceTint,
    outlineVariant = blue_dark_outlineVariant,
    scrim = blue_dark_scrim,
)

val blue_light_primary = Color(0xFF405F91)
val blue_light_onPrimary = Color(0xFFFFFFFF)
val blue_light_primaryContainer = Color(0xFFD6E3FF)
val blue_light_onPrimaryContainer = Color(0xFF001B3E)
val blue_light_secondary = Color(0xFF565F71)
val blue_light_onSecondary = Color(0xFFFFFFFF)
val blue_light_secondaryContainer = Color(0xFFDAE2F9)
val blue_light_onSecondaryContainer = Color(0xFF131C2B)
val blue_light_tertiary = Color(0xFF6F5575)
val blue_light_onTertiary = Color(0xFFFFFFFF)
val blue_light_tertiaryContainer = Color(0xFFF9D8FD)
val blue_light_onTertiaryContainer = Color(0xFF28132E)
val blue_light_error = Color(0xFFBA1A1A)
val blue_light_onError = Color(0xFFFFFFFF)
val blue_light_errorContainer = Color(0xFFFFDAD6)
val blue_light_onErrorContainer = Color(0xFF410002)
val blue_light_background = Color(0xFFF9F9FF)
val blue_light_onBackground = Color(0xFF191C20)
val blue_light_surface = Color(0xFFF9F9FF)
val blue_light_onSurface = Color(0xFF191C20)
val blue_light_surfaceVariant = Color(0xFFE0E2EC)
val blue_light_onSurfaceVariant = Color(0xFF44474E)
val blue_light_outline = Color(0xFF74777F)
val blue_light_outlineVariant = Color(0xFFC4C6D0)
val blue_light_scrim = Color(0xFF000000)
val blue_light_inverseSurface = Color(0xFF2E3036)
val blue_light_inverseOnSurface = Color(0xFFF0F0F7)
val blue_light_inversePrimary = Color(0xFFAAC7FF)
val blue_light_surfaceDim = Color(0xFFD9D9E0)
val blue_light_surfaceBright = Color(0xFFF9F9FF)
val blue_light_surfaceContainerLowest = Color(0xFFFFFFFF)
val blue_light_surfaceContainerLow = Color(0xFFF3F3FA)
val blue_light_surfaceContainer = Color(0xFFEDEDF4)
val blue_light_surfaceContainerHigh = Color(0xFFE7E8EE)
val blue_light_surfaceContainerHighest = Color(0xFFE2E2E9)

val blueThemeLightColorScheme = ColorScheme(
    primary = blue_light_primary,
    onPrimary = blue_light_onPrimary,
    primaryContainer = blue_light_primaryContainer,
    onPrimaryContainer = blue_light_onPrimaryContainer,
    secondary = blue_light_secondary,
    onSecondary = blue_light_onSecondary,
    secondaryContainer = blue_light_secondaryContainer,
    onSecondaryContainer = blue_light_onSecondaryContainer,
    tertiary = blue_light_tertiary,
    onTertiary = blue_light_onTertiary,
    tertiaryContainer = blue_light_tertiaryContainer,
    onTertiaryContainer = blue_light_onTertiaryContainer,
    error = blue_light_error,
    onError = blue_light_onError,
    errorContainer = blue_light_errorContainer,
    onErrorContainer = blue_light_onErrorContainer,
    background = blue_light_background,
    onBackground = blue_light_onBackground,
    surface = blue_light_surface,
    onSurface = blue_light_onSurface,
    surfaceVariant = blue_light_surfaceVariant,
    onSurfaceVariant = blue_light_onSurfaceVariant,
    outline = blue_light_outline,
    inverseOnSurface = blue_light_inverseOnSurface,
    inverseSurface = blue_light_inverseSurface,
    inversePrimary = blue_light_inversePrimary,
    surfaceTint = blue_light_primary,
    outlineVariant = blue_light_outlineVariant,
    scrim = blue_light_scrim,
    surfaceDim = blue_light_surfaceDim,
    surfaceBright = blue_light_surfaceBright,
    surfaceContainerLowest = blue_light_surfaceContainerLowest,
    surfaceContainerLow = blue_light_surfaceContainerLow,
    surfaceContainer = blue_light_surfaceContainer,
    surfaceContainerHigh = blue_light_surfaceContainerHigh,
    surfaceContainerHighest = blue_light_surfaceContainerHighest,
)